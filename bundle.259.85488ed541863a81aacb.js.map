{"version":3,"sources":["webpack://cloud.openshift.com/./src/chrome-main.jsx","webpack://cloud.openshift.com/./src/main.jsx"],"names":["Api","Config","OCM","setAuthInterceptor","authInterceptor","setRouteBasePath","AppEntry","React","ready","componentDidMount","insights","chrome","init","identifyApp","then","appNavClick","getNavClickParams","window","location","pathname","auth","getUser","data","store","userInfoResponse","identity","user","config","detectFeatures","this","setState","Sentry","dsn","integrations","SessionTiming","onerror","onunhandledrejection","scope","email","username","setUser","render","state","Provider","NotificationPortal","BrowserRouter","basename","getBaseName","App","ReactDOM","document","getElementById"],"mappings":"0VAwCA,MAAM,IAAEA,EAAF,OAAOC,GAAWC,IASxBF,EAAIG,mBAAmBC,KACvBH,EAAOI,iBAAiB,uBAGxB,MAAMC,UAAiBC,cAAgB,kB,QAAA,Y,EAC7B,CAAEC,OAAO,I,EADoB,gB,sBAAA,K,uDAAA,K,KAGrCC,oBACEC,SAASC,OAAOC,OAChBF,SAASC,OAAOE,YAAY,IAAIC,MAAK,KACnCJ,SAASC,OAAOI,aAAYC,OAAkBC,OAAOC,SAASC,cAEhET,SAASC,OAAOS,KAAKC,UAClBP,MAAMQ,IACLC,cAAeC,QAAiBF,GAAQA,EAAKG,UAAYH,EAAKG,SAASC,OACvEC,mBACGb,MAAK,KACJS,cAAeK,UACfC,KAAKC,SAAS,CAAEtB,OAAO,KAClBmB,eAAmBA,4BACtBI,KAAY,CACVC,IAAKL,0BACLM,aAAc,CACZ,IAAIC,IACJ,IAAIH,oBAAmC,CACrCI,SAAS,EACTC,sBAAsB,OAIxBd,GAAQA,EAAKG,UAAYH,EAAKG,SAASC,MAEzCK,KAAuBM,IACrB,MAAM,MAAEC,EAAF,SAASC,GAAajB,EAAKG,SAASC,KAC1CW,EAAMG,QAAQ,CAAEF,QAAOC,uBAQvCE,SACE,MAAM,MAAEjC,GAAUqB,KAAKa,MACvB,OAAIlC,EAEA,kBAAC,EAAAmC,SAAD,CAAUpB,MAAOA,KACf,kBAACqB,EAAA,GAAD,CAAoBrB,MAAOA,MAC3B,kBAAC,EAAAsB,cAAD,CAAeC,UAAUC,WACvB,kBAACC,EAAA,EAAD,QAKD,MAGX,UC9CK/B,OAAOP,SAQVuC,WAAgB,kBAAC,EAAD,MAAcC,SAASC,eAAe","file":"bundle.259.85488ed541863a81aacb.js","sourcesContent":["/*\nCopyright (c) 2018 Red Hat, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\n\nimport * as Sentry from '@sentry/browser';\nimport { SessionTiming } from '@sentry/integrations';\n\nimport { OCM } from 'openshift-assisted-ui-lib';\n\nimport config from './config';\n\nimport getNavClickParams from './common/getNavClickParams';\nimport getBaseName from './common/getBaseName';\n\nimport { userInfoResponse } from './redux/actions/userActions';\nimport { detectFeatures } from './redux/actions/featureActions';\n\nimport { store } from './redux/store';\nimport { authInterceptor } from './services/apiRequest';\n\nimport App from './components/App/App';\n\nimport './styles/main.scss';\n\nconst { Api, Config } = OCM;\n\n/**\n * Assisted Installer configuration\n *\n * We need to pass axios auth interceptor so every request from AI has proper headers.\n *\n * We also need to set the route base path for the internal AI routing to work properly.\n */\nApi.setAuthInterceptor(authInterceptor);\nConfig.setRouteBasePath('/assisted-installer');\n\n// Chrome 2.0 renders this\nclass AppEntry extends React.Component {\n  state = { ready: false };\n\n  componentDidMount() {\n    insights.chrome.init();\n    insights.chrome.identifyApp('').then(() => {\n      insights.chrome.appNavClick(getNavClickParams(window.location.pathname));\n    });\n    insights.chrome.auth.getUser()\n      .then((data) => {\n        store.dispatch(userInfoResponse(data && data.identity && data.identity.user));\n        config.fetchConfig()\n          .then(() => {\n            store.dispatch(detectFeatures());\n            this.setState({ ready: true });\n            if (!config.override && config.configData.sentryDSN) {\n              Sentry.init({\n                dsn: config.configData.sentryDSN,\n                integrations: [\n                  new SessionTiming(),\n                  new Sentry.Integrations.GlobalHandlers({\n                    onerror: true,\n                    onunhandledrejection: false,\n                  }),\n                ],\n              });\n              if (data && data.identity && data.identity.user) {\n                // add user info to Sentry\n                Sentry.configureScope((scope) => {\n                  const { email, username } = data.identity.user;\n                  scope.setUser({ email, username });\n                });\n              }\n            }\n          });\n      });\n  }\n\n  render() {\n    const { ready } = this.state;\n    if (ready) {\n      return (\n        <Provider store={store}>\n          <NotificationPortal store={store} />\n          <BrowserRouter basename={getBaseName()}>\n            <App />\n          </BrowserRouter>\n        </Provider>\n      );\n    }\n    return null;\n  }\n}\nexport default AppEntry;\n","/*\nCopyright (c) 2018 Red Hat, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppEntry from './chrome-main';\n\nconst renderDevEnvError = () => {\n  ReactDOM.render(\n    <div style={{ margin: '25px' }}>\n      <h1>Development environment error</h1>\n      <h2>You&apos;re accessing the webpack dev server directly</h2>\n      <p>\n        This app is designed to run within the Insights Chrome, and can&apos;t run without it.\n      </p>\n      <p>\n        If you&apos;re already running the Insights Chrome Proxy, you just got the URL wrong.\n        {' '}\n        <a href=\"https://qa.foo.redhat.com:1337/openshift\">\n          Click here to access the app.\n        </a>\n      </p>\n      <p>\n        If you don&apos;t know what the Insights Chrome Proxy is or how to run it,\n        {' '}\n        consult README.md and README-tldr.md\n      </p>\n    </div>,\n    document.body,\n  );\n};\n\nconst renderUnsupportedEnvError = () => {\n  ReactDOM.render(\n    <div style={{ margin: '25px' }}>\n      <h1>Unsupported environment</h1>\n      <h2>OCM does not support this environment</h2>\n      <p>\n        Please use one of our supported environments.\n      </p>\n      <p>\n        OCM is only being deployed to this environment to ensure navigation keeps working.\n      </p>\n    </div>,\n    document.getElementById('root'),\n  );\n};\n\nif (!window.insights && APP_DEV_SERVER) {\n  // we don't want this info to ever be complied to the prod build,\n  // so I made sure it's only ever called in development mode\n  renderDevEnvError();\n} else if (APP_API_ENV === 'disabled') {\n  // This is a build for an environment we don't support. render an error.\n  renderUnsupportedEnvError();\n} else {\n  ReactDOM.render(<AppEntry />, document.getElementById('root'));\n}\n"],"sourceRoot":""}