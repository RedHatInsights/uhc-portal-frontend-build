{"version":3,"file":"bundle.236.0b357757ff02d008.js","mappings":"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","sources":["webpack://cloud.openshift.com/./src/chrome-main.tsx","webpack://cloud.openshift.com/./src/common/getBaseName.ts","webpack://cloud.openshift.com/./src/common/getNavClickParams.ts","webpack://cloud.openshift.com/./src/components/App/App.tsx","webpack://cloud.openshift.com/./src/components/App/Router.tsx","webpack://cloud.openshift.com/./src/redux/actions/featureActions.ts","webpack://cloud.openshift.com/./src/redux/actions/userActions.ts","webpack://cloud.openshift.com/./src/redux/store.ts"],"sourcesContent":["/*\nCopyright (c) 2018 Red Hat, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nimport React from 'react';\nimport './i18n';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// No type definitions\n// @ts-ignore\nimport NotificationPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\n\nimport * as Sentry from '@sentry/browser';\nimport { SessionTiming } from '@sentry/integrations';\n\nimport * as OCM from '@openshift-assisted/ui-lib/ocm';\n\nimport config from './config';\n\nimport getNavClickParams from './common/getNavClickParams';\nimport ocmBaseName from './common/getBaseName';\n\nimport { userInfoResponse } from './redux/actions/userActions';\nimport { detectFeatures } from './redux/actions/featureActions';\n\nimport { store } from './redux/store';\nimport { authInterceptor } from './services/apiRequest';\n\nimport App from './components/App/App';\nimport type { AppThunkDispatch } from './redux/types';\n\nimport './styles/main.scss';\n\nconst { Api, Config } = OCM;\n\n/**\n * Assisted Installer configuration\n *\n * We need to pass axios auth interceptor so every request from AI has proper headers.\n *\n * We also need to set the route base path for the internal AI routing to work properly.\n */\nApi.setAuthInterceptor(authInterceptor);\nConfig.setRouteBasePath('/assisted-installer');\n\n// Chrome 2.0 renders this\nclass AppEntry extends React.Component {\n  state = { ready: false };\n\n  componentDidMount() {\n    insights.chrome.init();\n    insights.chrome.identifyApp('').then(() => {\n      insights.chrome.appNavClick(getNavClickParams(window.location.pathname));\n    });\n    insights.chrome.auth.getUser().then((data) => {\n      if (data?.identity?.user) {\n        store.dispatch(userInfoResponse(data.identity.user));\n      }\n      config.fetchConfig().then(() => {\n        (store.dispatch as AppThunkDispatch)(detectFeatures());\n        this.setState({ ready: true });\n        if (!config.envOverride && config.configData.sentryDSN) {\n          Sentry.init({\n            dsn: config.configData.sentryDSN,\n            integrations: [\n              new SessionTiming(),\n              new Sentry.Integrations.GlobalHandlers({\n                onerror: true,\n                onunhandledrejection: false,\n              }),\n            ],\n          });\n          if (data?.identity?.user) {\n            const { email, username } = data.identity.user;\n            // add user info to Sentry\n            Sentry.configureScope((scope) => {\n              scope.setUser({ email, username });\n            });\n          }\n        }\n      });\n    });\n\n    if (\n      // app is running in local development\n      APP_DEV_SERVER ||\n      // app is not built in production mode\n      APP_DEVMODE ||\n      // build is not deployed in a production environment\n      APP_API_ENV !== 'production'\n    ) {\n      insights.chrome.enable.segmentDev();\n    }\n  }\n\n  render() {\n    const { ready } = this.state;\n    if (ready) {\n      // HACK: react-router only looks at `basename` prop once on initialization, so this is\n      //    fragile if we later jump between /preview & /beta.\n      const basename = ocmBaseName();\n\n      return (\n        <Provider store={store}>\n          <NotificationPortal />\n          <BrowserRouter\n            basename={basename}\n            getUserConfirmation={() => {\n              /* Block the default browser prompt (window.confirm). */\n            }}\n          >\n            <App />\n          </BrowserRouter>\n        </Provider>\n      );\n    }\n    return null;\n  }\n}\nexport default AppEntry;\n","const {\n  insights: { appname },\n} = require('../../package.json');\n\nconst getBaseEnv = (): string => {\n  if (window?.location.pathname.startsWith('/beta')) {\n    return '/beta';\n  }\n  if (window?.location.pathname.startsWith('/preview') || APP_BETA) {\n    return '/preview';\n  }\n  return '';\n};\n\n/** Returns base path for this app */\nconst ocmBaseName = (): string => `${getBaseEnv()}/${appname}`;\n\n/** Returns base path for Insights Advisor app */\nconst advisorBaseName = (): string => `${getBaseEnv()}/openshift/insights/advisor`;\n\n/**\n * Removes the basename from the beginning of a path\n * @param {string} path\n */\nconst ocmBaseNameRegexp = new RegExp(`^(/preview|/beta|)/${appname}`, 'i');\n\nconst removeOcmBaseName = (path: string): string => path.replace(ocmBaseNameRegexp, '');\n\nconst getResourcesBase = (): string => (APP_BETA ? `/beta/apps/${appname}` : `/apps/${appname}`);\n\nexport { advisorBaseName, getResourcesBase, removeOcmBaseName };\n\nexport default ocmBaseName;\n","/*\nThe Insights Platform delegates menu highlighting resposibility to OCM.\nThis file contain a function mapping OCM paths to Insights Platform `appNavClick` parameters.\nThis is used both for in-app navigation (see app/Insights.jsx) or on-load (see main.jsx)\n*/\n\nimport { removeOcmBaseName } from './getBaseName';\n\n/**\n * Get parameters for `appNavClick` based on the provided path.\n * @param {string} pathname target path\n * */\nexport default function getNavClickParams(pathname: string) {\n  const cleanPathName = removeOcmBaseName(pathname).replace(/^\\//, '');\n  const components = cleanPathName.split('/');\n\n  // The `id` and `parentId` below correspond to current navigation structure\n  // https://github.com/cben/cloud-services-config/blob/prod-stable/main.yml\n  // TODO: will things change with new upcoming json format?\n  // https://github.com/cben/cloud-services-config/blob/ci-beta/chrome/openshift-navigation.json\n  switch (components[0]) {\n    case 'downloads':\n    case 'token':\n      return { id: 'downloads' };\n\n    case 'quota':\n      return {\n        id: components[1] || 'openshift-quota',\n        parentId: 'subscriptions',\n        secondaryNav: true,\n      };\n\n    // These belong to \"appId\": \"subscriptions\" but important not to send them to \"Clusters\"\n    case 'subscriptions':\n      return {\n        id: components[1],\n        parentId: 'subscriptions',\n        secondaryNav: true,\n      };\n\n    // Regular 1:1 cases.\n    case 'overview':\n    case 'releases':\n      return { id: components[0] };\n\n    // Too many cluster-related pages to list ('', 'details', 'archived', 'create', 'register'...)\n    default:\n      return { id: '' }; // \"Clusters\"\n  }\n}\n","/*\nCopyright (c) 2018 Red Hat, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React, { ReactNode, useState } from 'react';\nimport useResizeObserver from '@react-hook/resize-observer';\nimport Router from './Router';\nimport './App.scss';\n\ntype Props = {\n  children?: ReactNode | undefined;\n};\n\nconst App = ({ children }: Props) => {\n  const header = document.getElementsByTagName('header')[0];\n  const [headerHeight, setHeaderHeight] = useState(header.getBoundingClientRect().height);\n\n  useResizeObserver(header, (entry) => {\n    const { contentRect } = entry;\n    if (headerHeight !== contentRect.height) {\n      setHeaderHeight(contentRect.height);\n    }\n  });\n\n  return (\n    <div id=\"app-outer-div\" style={{ height: `calc(100vh - ${headerHeight}px` }}>\n      <Router />\n    </div>\n  );\n};\n\nexport default App;\n","/*\nCopyright (c) 2018 Red Hat, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport React, { useEffect } from 'react';\nimport {\n  Route,\n  RouteComponentProps,\n  Redirect,\n  Switch,\n  withRouter,\n  useLocation,\n} from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport get from 'lodash/get';\nimport { connect } from 'react-redux';\nimport * as OCM from '@openshift-assisted/ui-lib/ocm';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport TermsGuardedRoute from './TermsGuardedRoute';\nimport apiRequest from '../../services/apiRequest';\nimport ApiError from './ApiError';\nimport Overview from '../overview';\nimport ClustersList from '../clusters/ClusterList';\nimport ArchivedClusterList from '../clusters/ArchivedClusterList';\nimport CreateClusterPage from '../clusters/CreateClusterPage';\nimport RegisterCluster from '../clusters/RegisterCluster';\nimport CreateROSAWizard from '../clusters/CreateROSAPage/CreateROSAWizard';\nimport ConnectedInstallAlibaba from '../clusters/install/InstallAlibaba';\nimport InstallArmAWS from '../clusters/install/InstallArmAWS';\nimport ConnectedInstallArmAWSIPI from '../clusters/install/InstallArmAWSIPI';\nimport ConnectedInstallArmAWSUPI from '../clusters/install/InstallArmAWSUPI';\nimport InstallAWS from '../clusters/install/InstallAWS';\nimport ConnectedInstallAWSUPI from '../clusters/install/InstallAWSUPI';\nimport ConnectedInstallAWSIPI from '../clusters/install/InstallAWSIPI';\nimport ConnectedInstallMultiAWSIPI from '../clusters/install/InstallMultiAWSIPI';\nimport InstallBareMetal from '../clusters/install/InstallBareMetal';\nimport InstallASH from '../clusters/install/InstallASH';\nimport ConnectedInstallASHIPI from '../clusters/install/InstallASHIPI';\nimport ConnectedInstallASHUPI from '../clusters/install/InstallASHUPI';\nimport ConnectedInstallArmAzureIPI from '../clusters/install/InstallArmAzureIPI';\nimport InstallAzure from '../clusters/install/InstallAzure';\nimport ConnectedInstallAzureIPI from '../clusters/install/InstallAzureIPI';\nimport ConnectedInstallAzureUPI from '../clusters/install/InstallAzureUPI';\nimport InstallGCP from '../clusters/install/InstallGCP';\nimport ConnectedInstallGCPIPI from '../clusters/install/InstallGCPIPI';\nimport ConnectedInstallGCPUPI from '../clusters/install/InstallGCPUPI';\nimport ConnectedInstallIBMCloud from '../clusters/install/InstallIBMCloud';\nimport ConnectedInstallMultiAzureIPI from '../clusters/install/InstallMultiAzureIPI';\nimport ConnectedInstallMultiPreRelease from '../clusters/install/InstallMultiPreRelease';\nimport ConnectedInstallNutanixIPI from '../clusters/install/InstallNutanixIPI';\nimport InstallOSP from '../clusters/install/InstallOSP';\nimport ConnectedInstallOSPIPI from '../clusters/install/InstallOSPIPI';\nimport ConnectedInstallOSPUPI from '../clusters/install/InstallOSPUPI';\nimport InstallRHV from '../clusters/install/InstallRHV';\nimport ConnectedInstallRHVIPI from '../clusters/install/InstallRHVIPI';\nimport ConnectedInstallRHVUPI from '../clusters/install/InstallRHVUPI';\nimport ConnectedInstallVSphereABI from '../clusters/install/InstallVSphereABI';\nimport ConnectedInstallVSphereUPI from '../clusters/install/InstallVSphereUPI';\nimport ConnectedInstallVSphereIPI from '../clusters/install/InstallVSphereIPI';\nimport InstallNutanix from '../clusters/install/InstallNutanix';\nimport InstallVSphere from '../clusters/install/InstallVSphere';\nimport InstallPlatformAgnostic from '../clusters/install/InstallPlatformAgnostic';\nimport ConnectedInstallPlatformAgnosticABI from '../clusters/install/InstallPlatformAgnosticABI';\nimport ConnectedInstallPlatformAgnosticUPI from '../clusters/install/InstallPlatformAgnosticUPI';\nimport ConnectedInstallPreRelease from '../clusters/install/InstallPreRelease';\nimport ConnectedInstallPullSecret from '../clusters/install/InstallPullSecret';\nimport ConnectedInstallPullSecretAzure from '../clusters/install/InstallPullSecretAzure';\nimport ConnectedInstallIBMZUPI from '../clusters/install/InstallIBMZUPI';\nimport ConnectedInstallIBMZPreRelease from '../clusters/install/InstallIBMZPreRelease';\nimport InstallIBMZ from '../clusters/install/InstallIBMZ';\nimport ConnectedInstallPowerUPI from '../clusters/install/InstallPowerUPI';\nimport ConnectedInstallPowerPreRelease from '../clusters/install/InstallPowerPreRelease';\nimport InstallPower from '../clusters/install/InstallPower';\nimport ConnectedInstallArmPreRelease from '../clusters/install/InstallArmPreRelease';\nimport DownloadsPage from '../downloads/DownloadsPage';\nimport Tokens from '../tokens';\nimport TokensROSA from '../tokens/TokensROSA';\nimport NotFoundError from './NotFoundError';\nimport Quota from '../quota';\nimport Insights from './Insights';\nimport withFeatureGate from '../features/with-feature-gate';\nimport { useFeatures } from './hooks/useFeatures';\nimport {\n  ASSISTED_INSTALLER_FEATURE,\n  OSD_WIZARD_V1,\n  OSD_WIZARD_V2_FEATURE,\n  HYPERSHIFT_WIZARD_FEATURE,\n} from '../../redux/constants/featureConstants';\nimport InstallBMABI from '../clusters/install/InstallBareMetalABI';\nimport InstallBMUPI from '../clusters/install/InstallBareMetalUPI';\nimport InstallBMIPI from '../clusters/install/InstallBareMetalIPI';\nimport InstallArmBareMetal from '../clusters/install/InstallArmBareMetal';\nimport InstallArmBMIPI from '../clusters/install/InstallArmBareMetalIPI';\nimport InstallArmBMUPI from '../clusters/install/InstallArmBareMetalUPI';\nimport InstallMultiBMUPI from '../clusters/install/InstallMultiBareMetalUPI';\nimport InstallPowerVSIPI from '../clusters/install/InstallPowerVirtualServerIPI';\nimport { normalizedProducts } from '../../common/subscriptionTypes';\nimport Releases from '../releases/index';\nimport IdentityProvidersPage from '../clusters/ClusterDetails/components/IdentityProvidersPage';\nimport GetStartedWithROSA from '../clusters/CreateROSAPage/CreateROSAWizard/CreateRosaGetStarted';\nimport EntitlementConfig from '../common/EntitlementConfig/index';\nimport InsightsAdvisorRedirector from '../clusters/InsightsAdvisorRedirector';\nimport ClusterDetailsSubscriptionId from '../clusters/ClusterDetails/ClusterDetailsSubscriptionId';\nimport ClusterDetailsClusterOrExternalId from '../clusters/ClusterDetails/ClusterDetailsClusterOrExternalId';\nimport CreateOSDWizard from '../clusters/CreateOSDPage/CreateOSDWizard';\nimport { CreateOsdWizard } from '../clusters/wizards';\nimport { metadataByRoute, is404 } from './routeMetadata';\nimport { useFeatureGate } from '~/hooks/useFeatureGate';\nimport { AppPage } from './AppPage';\n\nconst { AssistedUiRouter } = OCM;\nconst AssistedUiRouterPage: typeof AssistedUiRouter = (props) => (\n  <AppPage>\n    <AssistedUiRouter {...props} />\n  </AppPage>\n);\n\nconst GatedAssistedUiRouter = withFeatureGate(AssistedUiRouterPage, ASSISTED_INSTALLER_FEATURE);\nconst GatedMetalInstall = withFeatureGate(\n  InstallBareMetal,\n  ASSISTED_INSTALLER_FEATURE,\n  // TODO remove ts-ignore when `withFeatureGate` and InstallBMUPI are converted to typescript\n  // @ts-ignore\n  InstallBMUPI, // InstallBMIPI,\n);\ninterface RouterProps extends RouteComponentProps {\n  planType: string;\n  clusterId: string;\n  externalClusterId: string;\n}\n\nconst Router: React.FC<RouterProps> = ({ history, planType, clusterId, externalClusterId }) => {\n  const { pathname } = useLocation();\n\n  const {\n    segment: { setPageMetadata },\n  } = useChrome();\n\n  const isHypershiftWizardEnabled = useFeatureGate(HYPERSHIFT_WIZARD_FEATURE);\n  // OSD_WIZARD_V2_FEATURE enabled in staging, disabled in production (via Unleashed)\n  const isOSDv2WizardEnabled = useFeatureGate(OSD_WIZARD_V2_FEATURE);\n  // OSD_WIZARD_V1 can be enabled in staging by appending `?features={\"osd-wizard-v1\":\"true\"}`\n  const { [OSD_WIZARD_V1]: showOSDWizardV1 } = useFeatures();\n\n  // For testing purposes, show which major features are enabled/disabled\n  React.useEffect(() => {\n    // eslint-disable-next-line no-console\n    console.info(\n      '---------------Features---------------\\n',\n      `HYPERSHIFT_WIZARD_FEATURE: ${isHypershiftWizardEnabled ? 'Enabled' : 'Disabled'}\\n`,\n      `OSD_WIZARD_V2_FEATURE: ${isOSDv2WizardEnabled ? 'Enabled' : 'Disabled'}\\n`,\n      `OSD_WIZARD_V1: ${showOSDWizardV1 ? 'Enabled' : 'Disabled'}\\n`,\n      '-------------------------------------',\n    );\n  }, [isHypershiftWizardEnabled, isOSDv2WizardEnabled, showOSDWizardV1]);\n\n  useEffect(() => {\n    setPageMetadata({\n      ...metadataByRoute(pathname, planType, clusterId, externalClusterId),\n      ...(is404() ? { title: '404 Not Found' } : {}),\n    });\n  }, [pathname, planType, clusterId, externalClusterId, setPageMetadata]);\n\n  return (\n    <>\n      <Insights />\n      <ConnectedRouter history={history}>\n        <ApiError apiRequest={apiRequest}>\n          <Switch>\n            {/*\n              IMPORTANT!\n              When adding new routes, make sure to add the route both here and in Router.test.jsx,\n              to ensure the route is tested.\n\n              When adding new top-level entries to left navigation, see also getNavClickParams.js.\n            */}\n            <Redirect\n              from=\"/install/osp/installer-provisioned\"\n              to=\"/install/openstack/installer-provisioned\"\n            />\n            <Redirect from=\"/install/crc/installer-provisioned\" to=\"/create/local\" />\n            <Redirect from=\"/token/moa\" to=\"/token/rosa\" />\n            <Redirect from=\"/insights\" to=\"/overview\" />\n            <Redirect from=\"/subscriptions\" to=\"/quota\" />\n            <Route path=\"/downloads\" component={DownloadsPage} />\n\n            {/* Each token page has 2 routes with distinct paths, to remember that user wanted\n                to see it during page reload that may be needed for elevated auth. */}\n            <TermsGuardedRoute\n              path=\"/token/rosa/show\"\n              history={history}\n              render={() => (\n                <AppPage>\n                  <TokensROSA show />\n                  <EntitlementConfig />\n                </AppPage>\n              )}\n            />\n            <TermsGuardedRoute\n              path=\"/token/rosa\"\n              history={history}\n              render={() => (\n                <AppPage>\n                  <TokensROSA show={false} showPath=\"/token/rosa/show\" />\n                  <EntitlementConfig />\n                </AppPage>\n              )}\n            />\n            <Route path=\"/token/show\" render={() => <Tokens show />} />\n            <Route path=\"/token\" render={() => <Tokens show={false} showPath=\"/token/show\" />} />\n\n            <Route\n              path=\"/install/alibaba/installer-provisioned\"\n              component={ConnectedInstallAlibaba}\n            />\n            <Route path=\"/install/arm/installer-provisioned\" component={InstallArmBMIPI} />\n            <Route path=\"/install/arm/user-provisioned\" component={InstallArmBMUPI} />\n            <Route path=\"/install/arm/pre-release\" component={ConnectedInstallArmPreRelease} />\n            <Route path=\"/install/arm\" component={InstallArmBareMetal} />\n            <Route path=\"/install/aws/installer-provisioned\" component={ConnectedInstallAWSIPI} />\n            <Route path=\"/install/aws/user-provisioned\" component={ConnectedInstallAWSUPI} />\n            <Route\n              path=\"/install/aws/arm/installer-provisioned\"\n              component={ConnectedInstallArmAWSIPI}\n            />\n            <Route path=\"/install/aws/arm/user-provisioned\" component={ConnectedInstallArmAWSUPI} />\n            <Route path=\"/install/aws/arm\" component={InstallArmAWS} />\n            <Route\n              path=\"/install/aws/multi/installer-provisioned\"\n              component={ConnectedInstallMultiAWSIPI}\n            />\n            <Route path=\"/install/aws\" component={InstallAWS} />\n            <Route path=\"/install/gcp/installer-provisioned\" component={ConnectedInstallGCPIPI} />\n            <Route path=\"/install/gcp/user-provisioned\" component={ConnectedInstallGCPUPI} />\n            <Route path=\"/install/gcp\" component={InstallGCP} />\n            <Route path=\"/install/nutanix\" exact component={InstallNutanix} />\n            <Route\n              path=\"/install/nutanix/installer-provisioned\"\n              component={ConnectedInstallNutanixIPI}\n            />\n            <Route\n              path=\"/install/openstack/installer-provisioned\"\n              component={ConnectedInstallOSPIPI}\n            />\n            <Route path=\"/install/openstack/user-provisioned\" component={ConnectedInstallOSPUPI} />\n            <Route path=\"/install/openstack\" component={InstallOSP} />\n            <Route path=\"/install/rhv/installer-provisioned\" component={ConnectedInstallRHVIPI} />\n            <Route path=\"/install/rhv/user-provisioned\" component={ConnectedInstallRHVUPI} />\n            <Route path=\"/install/rhv\" component={InstallRHV} />\n            <Route\n              path=\"/install/azure/arm/installer-provisioned\"\n              component={ConnectedInstallArmAzureIPI}\n            />\n            <Route\n              path=\"/install/azure/multi/installer-provisioned\"\n              component={ConnectedInstallMultiAzureIPI}\n            />\n            <Route\n              path=\"/install/azure/installer-provisioned\"\n              component={ConnectedInstallAzureIPI}\n            />\n            <Route path=\"/install/azure/user-provisioned\" component={ConnectedInstallAzureUPI} />\n            <Route path=\"/install/azure\" exact component={InstallAzure} />\n            <Route\n              path=\"/install/azure-stack-hub/installer-provisioned\"\n              exact\n              component={ConnectedInstallASHIPI}\n            />\n            <Route\n              path=\"/install/azure-stack-hub/user-provisioned\"\n              exact\n              component={ConnectedInstallASHUPI}\n            />\n            <Route path=\"/install/azure-stack-hub\" exact component={InstallASH} />\n            <Route path=\"/install/metal/user-provisioned\" component={InstallBMUPI} />\n            <Route path=\"/install/metal/installer-provisioned\" component={InstallBMIPI} />\n            <Route path=\"/install/metal/agent-based\" component={InstallBMABI} />\n            <Route path=\"/install/metal/multi\" component={InstallMultiBMUPI} />\n            <Route path=\"/install/metal\" component={GatedMetalInstall} />\n            <Route path=\"/install/multi/pre-release\" component={ConnectedInstallMultiPreRelease} />\n            <Route path=\"/install/vsphere\" exact component={InstallVSphere} />\n            <Route path=\"/install/vsphere/agent-based\" component={ConnectedInstallVSphereABI} />\n            <Route\n              path=\"/install/vsphere/user-provisioned\"\n              component={ConnectedInstallVSphereUPI}\n            />\n            <Route\n              path=\"/install/vsphere/installer-provisioned\"\n              component={ConnectedInstallVSphereIPI}\n            />\n            <Route path=\"/install/ibm-cloud\" component={ConnectedInstallIBMCloud} />\n            <Route path=\"/install/ibmz/user-provisioned\" component={ConnectedInstallIBMZUPI} />\n            <Route path=\"/install/ibmz/pre-release\" component={ConnectedInstallIBMZPreRelease} />\n            <Route path=\"/install/ibmz\" exact component={InstallIBMZ} />\n            <Route path=\"/install/power/user-provisioned\" component={ConnectedInstallPowerUPI} />\n            <Route path=\"/install/power/pre-release\" component={ConnectedInstallPowerPreRelease} />\n            <Route path=\"/install/power\" exact component={InstallPower} />\n            <Route path=\"/install/powervs/installer-provisioned\" component={InstallPowerVSIPI} />\n            <Route\n              path=\"/install/platform-agnostic/agent-based\"\n              component={ConnectedInstallPlatformAgnosticABI}\n            />\n            <Route\n              path=\"/install/platform-agnostic/user-provisioned\"\n              component={ConnectedInstallPlatformAgnosticUPI}\n            />\n            <Route path=\"/install/platform-agnostic\" component={InstallPlatformAgnostic} />\n            <Route path=\"/install/pre-release\" component={ConnectedInstallPreRelease} />\n            <Route path=\"/install/pull-secret\" component={ConnectedInstallPullSecret} />\n            <Route\n              path=\"/install/azure/aro-provisioned\"\n              component={ConnectedInstallPullSecretAzure}\n            />\n            <Redirect from=\"/install\" to=\"/create\" />\n            <Redirect from=\"/create/osd/aws\" to=\"/create/osd\" />\n            <Redirect from=\"/create/osd/gcp\" to=\"/create/osd\" />\n            <Redirect from=\"/create/osdtrial/aws\" to=\"/create/osdtrial\" />\n            <Redirect from=\"/create/osdtrial/gcp\" to=\"/create/osdtrial\" />\n            {isOSDv2WizardEnabled && !showOSDWizardV1 ? (\n              <TermsGuardedRoute\n                path=\"/create/osdtrial\"\n                gobackPath=\"/create\"\n                render={() => <CreateOsdWizard product={normalizedProducts.OSDTrial} />}\n                history={history}\n              />\n            ) : (\n              <TermsGuardedRoute\n                path=\"/create/osdtrial\"\n                gobackPath=\"/create\"\n                render={() => <CreateOSDWizard product={normalizedProducts.OSDTrial} />}\n                history={history}\n              />\n            )}\n            {isOSDv2WizardEnabled && !showOSDWizardV1 ? (\n              <TermsGuardedRoute\n                path=\"/create/osd\"\n                gobackPath=\"/create\"\n                component={CreateOsdWizard}\n                history={history}\n              />\n            ) : (\n              <TermsGuardedRoute\n                path=\"/create/osd\"\n                gobackPath=\"/create\"\n                render={() => <CreateOSDWizard product={normalizedProducts.OSD} />}\n                history={history}\n              />\n            )}\n\n            <Route\n              path=\"/create/cloud\"\n              render={(props) => <CreateClusterPage activeTab=\"cloud\" {...props} />}\n            />\n            <Route\n              path=\"/create/datacenter\"\n              render={(props) => <CreateClusterPage activeTab=\"datacenter\" {...props} />}\n            />\n            <Route\n              path=\"/create/local\"\n              render={(props) => <CreateClusterPage activeTab=\"local\" {...props} />}\n            />\n\n            <Redirect from=\"/create/rosa/welcome\" to=\"/create/rosa/getstarted\" />\n            <TermsGuardedRoute\n              path=\"/create/rosa/getstarted\"\n              history={history}\n              component={GetStartedWithROSA}\n            />\n\n            <TermsGuardedRoute\n              path=\"/create/rosa/wizard\"\n              history={history}\n              component={CreateROSAWizard}\n            />\n\n            <Route path=\"/create\" component={CreateClusterPage} />\n\n            <Route\n              path=\"/details/s/:id/insights/:reportId/:errorKey\"\n              component={InsightsAdvisorRedirector}\n            />\n            <Route path=\"/details/s/:id/add-idp/:idpTypeName\" component={IdentityProvidersPage} />\n            <Route\n              path=\"/details/s/:id/edit-idp/:idpName\"\n              render={({ match }) => <IdentityProvidersPage isEditForm match={match} />}\n            />\n            <Route path=\"/details/s/:id\" component={ClusterDetailsSubscriptionId} />\n            <Route\n              path=\"/details/:id/insights/:reportId/:errorKey\"\n              component={InsightsAdvisorRedirector}\n            />\n            <Route path=\"/details/:id\" component={ClusterDetailsClusterOrExternalId} />\n            <Route path=\"/register\" component={RegisterCluster} />\n            <Route path=\"/quota/resource-limits\" render={() => <Quota marketplace />} />\n            <Route path=\"/quota\" component={Quota} />\n            <Route path=\"/archived\" component={ArchivedClusterList} />\n            <Route path=\"/overview\" exact component={Overview} />\n            <Route path=\"/releases\" exact component={Releases} />\n            <Route path=\"/assisted-installer\" component={GatedAssistedUiRouter} />\n            <Route path=\"/\" exact component={ClustersList} />\n            <Route component={NotFoundError} />\n          </Switch>\n        </ApiError>\n      </ConnectedRouter>\n    </>\n  );\n};\n\ntype RouterState = {\n  clusters: any;\n};\nconst mapStateToProps = (state: RouterState) => {\n  const { cluster } = state.clusters.details;\n  return {\n    planType: get(cluster, 'subscription.plan.type', normalizedProducts.UNKNOWN),\n    clusterId: get(cluster, 'subscription.cluster_id'),\n    externalClusterId: get(cluster, 'subscription.external_cluster_id'),\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(Router));\n","import { action, ActionType } from 'typesafe-actions';\nimport {\n  SET_FEATURE,\n  ASSISTED_INSTALLER_PLATFORM_OCI,\n  ASSISTED_INSTALLER_FEATURE,\n  ASSISTED_INSTALLER_SNO_FEATURE,\n  ASSISTED_INSTALLER_OCS_FEATURE,\n  ASSISTED_INSTALLER_CNV_FEATURE,\n  OSD_TRIAL_FEATURE,\n  ASSISTED_INSTALLER_MERGE_LISTS_FEATURE,\n  ASSISTED_INSTALLER_NETWORK_TYPE_SELECTION_FEATURE,\n  ASSISTED_INSTALLER_PLATFORM_INTEGRATION_FEATURE,\n  OSD_WIZARD_V2_FEATURE,\n  ROSA_CREATION_WIZARD_FEATURE,\n  HYPERSHIFT_WIZARD_FEATURE,\n  HCP_ROSA_GETTING_STARTED_PAGE,\n} from '../constants/featureConstants';\nimport authorizationsService from '../../services/authorizationsService';\nimport accountsService from '../../services/accountsService';\nimport { SelfAccessReview } from '../../types/authorizations.v1/models/SelfAccessReview';\nimport type { AppThunk } from '../types';\nimport { Capability } from '~/types/accounts_mgmt.v1/models/Capability';\n\nexport const setFeatureAction = (feature: string, enabled: boolean) =>\n  action(SET_FEATURE, { feature, enabled });\n\nconst getSimpleUnleashFeature = (unleashFeatureName: string, name: string) => ({\n  name,\n  action: () =>\n    authorizationsService\n      .selfFeatureReview(unleashFeatureName)\n      .then((unleash) => unleash.data.enabled),\n});\n\ntype MapCapabilityToAssistedInstallerFeatureFunc = {\n  (capabilityName: string): Promise<boolean>;\n  cache?: Map<string, Capability[]>;\n};\n\nconst mapCapabilityToAssistedInstallerFeature: MapCapabilityToAssistedInstallerFeatureFunc = async (\n  capabilityName: string,\n) => {\n  if (!mapCapabilityToAssistedInstallerFeature.cache) {\n    mapCapabilityToAssistedInstallerFeature.cache = new Map();\n  }\n\n  let isFeatureEnabled = false;\n  const response = await accountsService.getCurrentAccount();\n  const userOrganizationId = response.data?.organization?.id;\n  if (userOrganizationId) {\n    if (!mapCapabilityToAssistedInstallerFeature.cache.has(userOrganizationId)) {\n      const organizationResponse = await accountsService.getOrganization(userOrganizationId);\n      const organization = organizationResponse.data;\n      mapCapabilityToAssistedInstallerFeature.cache.set(\n        userOrganizationId,\n        JSON.parse(JSON.stringify(organization.capabilities ?? [])) as Capability[],\n      );\n    }\n\n    const capabilities = mapCapabilityToAssistedInstallerFeature.cache.get(userOrganizationId);\n    const capabilityEntry = capabilities?.find(({ name }) => name === capabilityName);\n    isFeatureEnabled = capabilityEntry?.value === 'true';\n  }\n\n  return isFeatureEnabled;\n};\n\n// list of features to detect upon app startup\nexport const features = [\n  getSimpleUnleashFeature('osd-trial', OSD_TRIAL_FEATURE),\n  getSimpleUnleashFeature('hypershift-creation-wizard', HYPERSHIFT_WIZARD_FEATURE),\n  getSimpleUnleashFeature('hcp-rosa-getting-started-page', HCP_ROSA_GETTING_STARTED_PAGE),\n  getSimpleUnleashFeature('assisted-installer-sno', ASSISTED_INSTALLER_SNO_FEATURE),\n  getSimpleUnleashFeature('assisted-installer-ocs', ASSISTED_INSTALLER_OCS_FEATURE),\n  getSimpleUnleashFeature('assisted-installer-cnv', ASSISTED_INSTALLER_CNV_FEATURE),\n  getSimpleUnleashFeature('assisted-installer-merge-lists', ASSISTED_INSTALLER_MERGE_LISTS_FEATURE),\n  getSimpleUnleashFeature(\n    'assisted-installer-network-type-selection',\n    ASSISTED_INSTALLER_NETWORK_TYPE_SELECTION_FEATURE,\n  ),\n  getSimpleUnleashFeature(\n    'assisted-installer-platform-integration',\n    ASSISTED_INSTALLER_PLATFORM_INTEGRATION_FEATURE,\n  ),\n  getSimpleUnleashFeature('osd-creation-wizard-v2', OSD_WIZARD_V2_FEATURE),\n  getSimpleUnleashFeature('rosa-creation-wizard', ROSA_CREATION_WIZARD_FEATURE),\n  {\n    name: ASSISTED_INSTALLER_FEATURE,\n    action: () =>\n      Promise.all([\n        authorizationsService.selfAccessReview({\n          action: SelfAccessReview.action.CREATE,\n          // @ts-ignore 'BareMetalCluster' does not exist on SelfAccessReview.resource_type\n          resource_type: 'BareMetalCluster',\n        }),\n        authorizationsService.selfFeatureReview('assisted-installer'),\n      ]).then(([resource, unleash]) => resource.data.allowed && unleash.data.enabled),\n  },\n  {\n    name: ASSISTED_INSTALLER_PLATFORM_OCI,\n    action: async () =>\n      mapCapabilityToAssistedInstallerFeature(\n        'capability.organization.bare_metal_installer_platform_oci',\n      ),\n  },\n];\n\nexport const detectFeatures = (): AppThunk => (dispatch) => {\n  features.forEach(({ name, action: featureAction }) =>\n    featureAction()\n      .then((enabled) => dispatch(setFeatureAction(name, enabled)))\n      .catch(() => dispatch(setFeatureAction(name, false))),\n  );\n};\n\nexport type FeatureAction = ActionType<typeof setFeatureAction>;\n","import { action, ActionType } from 'typesafe-actions';\nimport type { AxiosResponse } from 'axios';\nimport { userConstants } from '../constants';\nimport { accountsService, authorizationsService } from '../../services';\nimport { normalizeQuotaCost } from '../../common/normalize';\nimport type { QuotaCostList, Organization, QuotaCost } from '../../types/accounts_mgmt.v1';\nimport type { UserInfo } from '../../types/types';\nimport type { AppThunk } from '../types';\n\nconst userInfoResponse = (payload: UserInfo) => action(userConstants.USER_INFO_RESPONSE, payload);\n\n/** Normalize incoming quota. */\nconst processQuota = (\n  response: AxiosResponse<QuotaCostList>,\n): {\n  items?: QuotaCost[] | undefined;\n} => ({\n  items: (response.data?.items ?? []).map(normalizeQuotaCost),\n});\n\nconst fetchQuota = (organizationID: string) =>\n  accountsService.getOrganizationQuota(organizationID).then(processQuota);\n\nconst fetchQuotaAndOrganization = (\n  organizationID: string,\n  organization?: Organization,\n): Promise<{ quota: { items?: QuotaCost[] }; organization: Organization }> => {\n  const promises: [ReturnType<typeof fetchQuota>, Promise<{ data: Organization }>] = [\n    fetchQuota(organizationID),\n    organization\n      ? Promise.resolve({ data: organization })\n      : accountsService.getOrganization(organizationID),\n  ];\n  return Promise.all(promises).then(([quota, organizationResponse]) => ({\n    quota,\n    organization: organizationResponse.data,\n  }));\n};\n\nconst fetchAccountThenQuotaAndOrganization = () =>\n  accountsService.getCurrentAccount().then((response) => {\n    const organizationID = response.data?.organization?.id;\n    return organizationID !== undefined\n      ? fetchQuotaAndOrganization(organizationID)\n      : Promise.reject(Error('No organization'));\n  });\n\nconst getOrganizationAndQuotaAction = (\n  payload: Promise<{ quota: { items?: QuotaCost[] }; organization: Organization }>,\n) => action(userConstants.GET_ORGANIZATION, payload);\n\nconst getOrganizationAndQuota = (): AppThunk => (dispatch, getState) => {\n  const { userProfile } = getState();\n  const organizationDetails = userProfile?.organization.fulfilled\n    ? userProfile?.organization?.details\n    : undefined;\n  const organizationID = organizationDetails?.id;\n  dispatch(\n    getOrganizationAndQuotaAction(\n      organizationID !== undefined\n        ? fetchQuotaAndOrganization(organizationID, organizationDetails)\n        : fetchAccountThenQuotaAndOrganization(),\n    ),\n  );\n};\n\nconst selfTermsReview = () =>\n  action(userConstants.SELF_TERMS_REVIEW, authorizationsService.selfTermsReview());\n\nconst userActions = {\n  userInfoResponse,\n  getOrganizationAndQuota,\n  processQuota,\n  selfTermsReview,\n};\n\ntype UserAction = ActionType<\n  typeof userInfoResponse | typeof getOrganizationAndQuotaAction | typeof selfTermsReview\n>;\n\nexport { userActions, userInfoResponse, getOrganizationAndQuota, selfTermsReview, UserAction };\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n// TODO'@redhat-cloud-services' modules implicitly have an 'any' type.\n// @ts-ignore\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\n\nimport { reduxReducers } from './reducers';\nimport sentryMiddleware from './sentryMiddleware';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nconst defaultOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n};\nconst history = createBrowserHistory();\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reduxReducers(history),\n  composeEnhancer(\n    applyMiddleware(\n      routerMiddleware(history),\n      thunkMiddleware,\n      promiseMiddleware,\n      notificationsMiddleware({ ...defaultOptions }),\n      sentryMiddleware,\n    ),\n  ),\n);\n\nexport type GlobalState = Omit<ReturnType<typeof store.getState>, 'rosaReducer'> & {\n  // TODO temporary overrides for reducers that aren't written in typescript\n  rosaReducer: {\n    getAWSBillingAccountsResponse: any;\n    getAWSAccountIDsResponse: {\n      data: any[];\n    };\n    offlineToken?: string;\n  };\n};\n\nexport { store as default, store, history };\n"],"names":["Api","Config","setAuthInterceptor","setRouteBasePath","AppEntry","state","ready","componentDidMount","insights","chrome","init","identifyApp","then","appNavClick","window","location","pathname","auth","getUser","data","identity","user","userInfoResponse","this","setState","dsn","integrations","onerror","onunhandledrejection","email","username","scope","setUser","enable","segmentDev","render","basename","Provider","store","BrowserRouter","getUserConfirmation","appname","getBaseEnv","startsWith","advisorBaseName","ocmBaseNameRegexp","RegExp","removeOcmBaseName","path","replace","getResourcesBase","getNavClickParams","components","split","id","parentId","secondaryNav","children","header","document","getElementsByTagName","headerHeight","setHeaderHeight","useState","getBoundingClientRect","height","entry","contentRect","style","AssistedUiRouter","GatedAssistedUiRouter","props","AppPage","ASSISTED_INSTALLER_FEATURE","GatedMetalInstall","connect","cluster","clusters","details","planType","normalizedProducts","clusterId","externalClusterId","withRouter","history","useLocation","segment","setPageMetadata","isHypershiftWizardEnabled","useFeatureGate","HYPERSHIFT_WIZARD_FEATURE","isOSDv2WizardEnabled","OSD_WIZARD_V2_FEATURE","OSD_WIZARD_V1","showOSDWizardV1","console","info","useEffect","title","apiRequest","Switch","Redirect","from","to","Route","component","show","showPath","exact","gobackPath","product","activeTab","match","isEditForm","marketplace","setFeatureAction","feature","enabled","action","SET_FEATURE","getSimpleUnleashFeature","unleashFeatureName","name","unleash","mapCapabilityToAssistedInstallerFeature","capabilityName","cache","Map","isFeatureEnabled","userOrganizationId","organization","has","set","JSON","parse","stringify","capabilities","get","capabilityEntry","find","value","features","OSD_TRIAL_FEATURE","HCP_ROSA_GETTING_STARTED_PAGE","ASSISTED_INSTALLER_SNO_FEATURE","ASSISTED_INSTALLER_OCS_FEATURE","ASSISTED_INSTALLER_CNV_FEATURE","ASSISTED_INSTALLER_MERGE_LISTS_FEATURE","ASSISTED_INSTALLER_NETWORK_TYPE_SELECTION_FEATURE","ASSISTED_INSTALLER_PLATFORM_INTEGRATION_FEATURE","ROSA_CREATION_WIZARD_FEATURE","Promise","all","resource_type","resource","allowed","ASSISTED_INSTALLER_PLATFORM_OCI","detectFeatures","dispatch","forEach","featureAction","catch","payload","userConstants","processQuota","response","items","map","fetchQuota","organizationID","accountsService","fetchQuotaAndOrganization","promises","resolve","quota","organizationResponse","getOrganizationAndQuota","getState","userProfile","organizationDetails","fulfilled","undefined","reject","Error","selfTermsReview","authorizationsService","userActions","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","dispatchDefaultFailure"],"sourceRoot":""}